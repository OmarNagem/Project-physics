import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from mpl_toolkits.mplot3d.art3d import Poly3DCollection

# --- Constants and Parameters ---
q = -1.60217663e-19  # Electron charge (C)
m = 9.1093837e-31    # Electron mass (kg)
KE_eV = 20.0         # Kinetic Energy (eV)

L_cyl = 0.3556       # Cylinder length (m)
R_cyl = 0.0762       # Cylinder radius (m)
slit_H = 0.0889      # Slit height (m)
slit_W = 0.0508      # Slit width (m)
beam_radius = 0.002 # Beam radius (m)

z_slit = L_cyl / 2.0
y_slit_top = R_cyl
y_slit_bottom = y_slit_top - slit_H

Bx = -0.00127  # Magnetic field in x (T)
Ey = 9020.0    # Electric field in y (V/m)

# --- Calculations ---
KE_J = KE_eV * abs(q)
v0 = np.sqrt(2 * KE_J / m)

omega_c = q * Bx / m
T_field = 2 * np.pi / abs(omega_c)
L_field = 0.20
z_start = z_slit - L_field / 2.0
z_end = z_slit + L_field / 2.0

# Trajectory within field
num_points = 300
t = np.linspace(0, T_field, num_points)
y_f = (m / (q * Bx)) * (v0 + Ey / Bx) * (1 - np.cos(omega_c * t))
z_rel = (m / (q * Bx)) * (v0 + Ey / Bx) * np.sin(omega_c * t) - (Ey / Bx) * t
z_f = z_start + z_rel

# Before and after field
z_before = np.linspace(0, z_start, 50)
y_before = np.zeros_like(z_before)
y_exit = y_f[-1]
z_after = np.linspace(z_end, L_cyl, 50)
y_after = np.full_like(z_after, y_exit)

# Combine
z_traj = np.concatenate((z_before, z_f, z_after))
y_traj = np.concatenate((y_before, y_f, y_after))
x_traj = np.zeros_like(z_traj)

# Create cylinder mesh
phi = np.linspace(0, 2 * np.pi, 60)
z_cyl = np.linspace(0, L_cyl, 60)
phi_mesh, z_mesh = np.meshgrid(phi, z_cyl)
x_cyl = R_cyl * np.cos(phi_mesh)
y_cyl = R_cyl * np.sin(phi_mesh)

# 3D Plot
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')

# Cylinder surface
ax.plot_surface(x_cyl, y_cyl, z_mesh, alpha=0.1, linewidth=0)

# Beam trajectory
ax.plot(x_traj, y_traj, z_traj, color='blue', label='Beam Center')

# Slit plane
X_slit = np.array([-slit_W/2, slit_W/2, slit_W/2, -slit_W/2])
Y_slit = np.array([y_slit_bottom, y_slit_bottom, y_slit_top, y_slit_top])
Z_slit = np.full_like(X_slit, z_slit)
verts = [list(zip(X_slit, Y_slit, Z_slit))]
slit_plane = Poly3DCollection(verts, color='red', alpha=0.3)
ax.add_collection3d(slit_plane)

# Formatting
ax.set_xlabel('X (m)')
ax.set_ylabel('Y (m)')
ax.set_zlabel('Z (m)')
ax.set_title('3D Electron Beam Trajectory in Cylindrical Geometry')
ax.set_xlim(-R_cyl, R_cyl)
ax.set_ylim(-R_cyl, R_cyl)
ax.set_zlim(0, L_cyl)
ax.legend()
plt.tight_layout()
plt.show()
